{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this challenge, you are tasked with creating a Python script for \n",
    "analyzing the financial records of your company. \n",
    "You will give a set of financial data called budget_data.csv. \n",
    "The dataset is composed of two columns: Date and Profit/Losses. \n",
    "(Thankfully, your company has rather lax standards for accounting so the records are simple.)\n",
    "\n",
    "Your task is to create a Python script that analyzes the records to calculate each of the following:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dependencies\n",
    "import os  #Create file paths across operating systems\n",
    "import csv   # Module for reading CSV files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<_csv.reader object at 0x10dbd9dd8>\n"
     ]
    }
   ],
   "source": [
    "# Path to collect data from the Resources folder\n",
    "csvpath = os.path.join(\"Resources\", \"budget_data.csv\")\n",
    "\n",
    "#Reading using CSV module\n",
    "with open(csvpath, newline=\"\") as csvfile:\n",
    "    budget_data = csv.reader(csvfile, delimiter=',')\n",
    "    print(budget_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'_csv.reader' object has no attribute 'Date'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-94-5d92107d15a1>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#The total number of months included in the dataset\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mtotal_months\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbudget_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDate\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"The total number of months included in the dataset: \"\u001b[0m \u001b[0;34m,\u001b[0m\u001b[0mtotal_months\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mtotal_months\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"The total number of months:\"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtotal_months\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mAttributeError\u001b[0m: '_csv.reader' object has no attribute 'Date'"
     ]
    }
   ],
   "source": [
    "total_months=0\n",
    "\n",
    "#The total number of months included in the dataset\n",
    "total_months = budget_data.Date.count()\n",
    "print(\"The total number of months included in the dataset: \" ,total_months)\n",
    "total_months = \"The total number of months:\" + str(total_months)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#The net total amount of \"Profit/Losses\" over the entire period\n",
    "total_amount = budget_data['Profit/Losses'].sum()\n",
    "print(\"\\nThe net total amount of Profit/Losses over the entire period:\",total_amount)\n",
    "total_amount = 'total profit:' + str(total_amount)\n",
    "\n",
    "#The average of the changes in \"Profit/Losses\" over the entire period\n",
    "avg_amount = budget_data['Profit/Losses'].mean()\n",
    "print(\"\\nThe average of the changes in Profit/Losses over the entire period:\",avg_amount)\n",
    "avg_amount = 'average profit/loss:' + str(avg_amount)\n",
    "\n",
    "#The greatest increase in profits (date and amount) over the entire period\n",
    "var = ['Date','Profit/Losses']\n",
    "max_amount = budget_data[var].max()\n",
    "print(\"\\nThe greatest increase in profits (date and amount) over the entire period:\",max_amount)\n",
    "max_amount = 'the max amount:' + str(max_amount)\n",
    "\n",
    "#The greatest decrease in losses (date and amount) over the entire period\n",
    "min_amount = budget_data[var].min()\n",
    "print(\"\\nThe greatest decrease in losses (date and amount) over the entire period:\",min_amount)\n",
    "min_amount = 'The mim amount: ' + str(min_amount)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
