{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dependencies\n",
    "import os  #Create file paths across operating systems\n",
    "import csv   # Module for reading CSV files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<_csv.reader object at 0x10815dba8>\n"
     ]
    }
   ],
   "source": [
    "# Path to collect data from the Resources folder\n",
    "csvpath = os.path.join(\"Resources\", \"election_data.csv\")\n",
    "\n",
    "#Reading using CSV module\n",
    "with open(csvpath, newline=\"\") as csvfile:\n",
    "    election_data = csv.reader(csvfile, delimiter=',')\n",
    "    print(election_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "total_votes = poll_data['Voter ID'].count()\n",
    "print(total_votes)\n",
    "\n",
    "#candidate_list & total number of votes each candidate won\n",
    "candidate_list = poll_data['Candidate'].value_counts()\n",
    "print(candidate_list)\n",
    "\n",
    "#Percentage\n",
    "percentage_of_votes = candidate_list/total_votes\n",
    "print(percentage_of_votes)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
